'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var nodeUtil = _interopDefault(require('util'));

const {
  inspect
} = nodeUtil;
class Middleware {
  constructor(...middlewares) {
    this.stack = [];
    this.use(middlewares);
  }

  use(...middlewares) {
    for (const middleware of middlewares) {
      if (Array.isArray(middleware)) {
        this.use(...middleware);
        continue;
      }

      if (typeof middleware !== 'function') {
        throw new TypeError('Middleware must be composed of functions!');
      }

      this.stack.push(middleware);
    }

    return this;
  }

  run(...args) {
    const {
      stack
    } = this;
    let index = -1;
    const status = {
      finished: false,
      contexts: args
    };

    const next = async i => {
      if (i <= index) {
        throw new Error('next() called multiple times');
      }

      index = i;
      const middleware = stack[i];

      if (!middleware) {
        status.finished = true;
        return status;
      }

      await middleware(...args, () => next(i + 1));
      return status;
    };

    return next(0);
  }

  [inspect.custom](depth, options) {
    const {
      name
    } = this.constructor;
    return `${options.stylize(name, 'special')} { ${inspect(this.stack, options)} }`;
  }

}

exports.Middleware = Middleware;
exports.default = Middleware;
